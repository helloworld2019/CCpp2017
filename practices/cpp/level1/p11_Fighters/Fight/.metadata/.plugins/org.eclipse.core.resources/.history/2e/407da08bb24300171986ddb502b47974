/*
 * main.cpp
 *
 *  Created on: 2017年5月28日
 *      Author: chen
 */

#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include<iostream>
#include"advanced.h"
#include"flight.h"
#include"EnemyFlight.h"
#include"map.h"
#include"bullet2.h"
#include"bullet.h"
#include"explosion.h"
#define WIDE 1000
#define HIGH 1000

int main()
{
	srand(time(0));
	sf::Mutex mutex;

    sf::RenderWindow window(sf::VideoMode(WIDE,HIGH), "Fly to Dream");

    std::vector<Explosion*> explosion ;
    sf::Texture Exlosion_Texture;
    Exlosion_Texture.loadFromFile("explosion.png");

    Flight MyFlight;
    sf::Texture MyFlight_Texture;
    MyFlight_Texture.loadFromFile("Flight.png");
    MyFlight.SetTexture(MyFlight_Texture);

    sf::Texture EnemeyFlight_Texture;
    EnemeyFlight_Texture.loadFromFile("2.png");
    EnemyFlight Enemey(EnemeyFlight_Texture);


    Map map("map.jpg");

    ArrayBullet Bullet;
    Bullet.texture1.loadFromFile("bullet1.png");
    Bullet.texture2.loadFromFile("bullet1.png");

    sf::Thread BulletControl(&ArrayBullet::control_bullet,&Bullet);

    BulletControl.launch();

    sf::Clock clock;
    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event)){
            if (event.type == sf::Event::Closed)
            	window.close();
        }
        int b=MyFlight.control();

        mutex.lock();
        if(b)Bullet.add_m(MyFlight.getx(),MyFlight.gety());

        if(clock.getElapsedTime()>sf::milliseconds(100)){
        	int m = Enemey.control();
        		while(m/10){
        			Bullet.add_e(Enemey.E[m%10]->getx(),Enemey.E[m%10]->gety());
        			m = m / 10 ;
        		}
        		clock.restart();
        }

        for(int i = 0 ;i < Bullet.A.size();i++){
        	for(int j = 0 ;Enemey.E.size();j++){
        		if(Enemey.E[j]->judge(Bullet.A[i].getx(),Bullet.A[i].gety())){
        			explosion.push_back(new Explosion);
        			explosion[explosion.size()-1]->settexture(Exlosion_Texture);
        			Enemey.E.erase(Enemey.E.begin()+j);
        		}

        	}
        }

        mutex.unlock();

        mutex.lock();

        window.clear(sf::Color::Black);
        window.draw(map.Getsprite());
        window.draw(MyFlight.GetSprite());
        for(int j = 0 ;j<Enemey.getnumber();j++){
        	window.draw(Enemey.E[j]->GetSprite());
        }

        for(int i= 0 ; i < Bullet.A.size();i++){
        	window.draw(Bullet.A[i].getsprite());
        }
        window.display();
        mutex.unlock();
    }
    return 0 ;
}






